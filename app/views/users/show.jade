extends ../layouts/default
block main
    - var name = user.name ? user.name : user.username;
        h1= name
        //p= JSON.stringify(map.config)
            //p= JSON.stringify(map.maskConfig)
            //p= JSON.stringify(map.heatmapData)
            //p= JSON.stringify(user.activities.length) + " activities"
block map
    script.
        $(document).ready(function () {
            var genRoutes = !{JSON.stringify(routeMaps)};
            var keep = [0,1,2,3,4];
            setTimeout(
                function () {
                    if (#{hasGeneratedRoutes}) {
                        $("#sidebar").toggleClass("collapsed");
                        $("#sidebar-routes").toggleClass("active");
                        $("#routes").toggleClass("active");
                    } else {
                        $("#sidebar").toggleClass("collapsed");
                        $("#sidebar-overview").toggleClass("active");
                        $("#overview").toggleClass("active");
                    }
                }, 500);

            $("#toggle-button-beginner").on("click", function () {
                $("#toggle-button-beginner").addClass("active");
                $("#toggle-button-advanced").removeClass("active");
                $("#toggle-button-pro").removeClass("active");
                }
            );
            $("#toggle-button-advanced").on("click", function () {
                    $("#toggle-button-beginner").removeClass("active");
                    $("#toggle-button-advanced").addClass("active");
                    $("#toggle-button-pro").removeClass("active");
                }
            );
            $("#toggle-button-pro").on("click", function () {
                    $("#toggle-button-beginner").removeClass("active");
                    $("#toggle-button-advanced").removeClass("active");
                    $("#toggle-button-pro").addClass("active");
                }
            );

            $("#toggle-button-running").on("click", function () {
                    $("#toggle-button-cycling").removeClass("active");
                    $("#toggle-button-running").addClass("active");
                    $("#toggle-button-both").removeClass("active");
                }
            );
            $("#toggle-button-cycling").on("click", function () {
                    $("#toggle-button-cycling").addClass("active");
                    $("#toggle-button-running").removeClass("active");
                    $("#toggle-button-both").removeClass("active");
                }
            );
            $("#toggle-button-both").on("click", function () {
                $("#toggle-button-both").addClass("active");
                $("#toggle-button-cycling").removeClass("active");
                $("#toggle-button-running").removeClass("active");
                }
            );

            $('#coordinate-form').submit(function (e) {
                $("#start").toggleClass("active");
                $("#settings").toggleClass("active");

                e.preventDefault();
                return true;
            });
            $('#settings-form').submit(function (e) {
                var lat = $('#input-lat').val();
                var lng = $('#input-lng').val();

                var inputLat = $("<input>")
                    .attr("type", "hidden")
                    .attr("name", "lat").val(lat);
                var inputLng = $("<input>")
                    .attr("type", "hidden")
                    .attr("name", "lng").val(lng);
                $("#settings").toggleClass("active");
                $('#settings-form').append($(inputLat));
                $('#settings-form').append($(inputLng));
                $("#loading").toggleClass("active");
            });

            $("#back-button").on("click", function () {
                $("#settings").toggleClass("active");
                $("#sidebar-start").toggleClass("active");
                $("#start").toggleClass("active");

            });


            $("#generate").on("click", function () {
                $("#sidebar-overview").toggleClass("active");
                $("#overview").toggleClass("active");
                $("#sidebar-start").toggleClass("active");
                $("#start").toggleClass("active");

            });
            $("#update").on("click", function () {
                $("#overview").toggleClass("active");
                $("#loading").toggleClass("active");
                $("#loadingText").html("Loading profile data. This can take a moment, please wait.");
            });
            $("#keepButton1").on("click", function () {
                $("#keepButton1").toggleClass("active");
                if (!keep.includes(0)) {
                    keep.push(0)
                } else {
                    var index = keep.indexOf(0);
                    keep.splice(index, 1);
                }
            });
            $("#keepButton2").on("click", function () {
                $("#keepButton2").toggleClass("active");
                if (!keep.includes(1)) {
                    keep.push(1)
                } else {
                    var index = keep.indexOf(1);
                    keep.splice(index, 1);
                }
            });
            $("#keepButton3").on("click", function () {
                $("#keepButton3").toggleClass("active");
                if (!keep.includes(2)) {
                    keep.push(2)
                } else {
                    var index = keep.indexOf(2);
                    keep.splice(index, 1);
                }
            });
            $("#keepButton4").on("click", function () {
                $("#keepButton4").toggleClass("active");
                if (!keep.includes(3)) {
                    keep.push(3)
                } else {
                    var index = keep.indexOf(3);
                    keep.splice(index, 1);
                }
            });
            $("#keepButton5").on("click", function () {
                $("#keepButton5").toggleClass("active");
                if (!keep.includes(4)) {
                    keep.push(4)
                } else {
                    var index = keep.indexOf(4);
                    keep.splice(index, 1);
                }
            });

            $("#showButton1").on("click", function () {
                loadMap(0);
            });
            $("#showButton2").on("click", function () {
                loadMap(1);
            });
            $("#showButton3").on("click", function () {
                loadMap(2);
            });
            $("#showButton4").on("click", function () {
                loadMap(3);
            });
            $("#showButton5").on("click", function () {
                loadMap(4);
            });

            $("#saveButton").on("click", function () {
                $("#saveButton").toggleClass("active");

                var form = document.createElement("form");
                var generatedRoutesField = document.createElement("input");
                var keepField = document.createElement("input");
                var csrf = document.createElement("input");

                form.method = "POST";
                form.action = "/routes/generated";

                generatedRoutesField.value = JSON.stringify(genRoutes.map(function(r) {return {id: r.id}}));
                generatedRoutesField.name = "generatedRoutes";
                form.appendChild(generatedRoutesField);

                keepField.value = JSON.stringify(keep);
                keepField.name = "keep";
                form.appendChild(keepField);

                csrf.value = "#{csrf_token}";
                csrf.name = "_csrf";
                csrf.type = "hidden";
                form.appendChild(csrf);

                document.body.appendChild(form);
                form.submit();
            });

            $("#position-next").on("click", function () {
            });
            $("#sidebar-start").on("click", function () {
            });
        });



    div.sidebar.collapsed(id="sidebar")
        div.sidebar-tabs
            ul(role="tablist")
                li(id='sidebar-overview')
                    a(href="#overview" role="tab")
                        i.fa.fa-user
                li(id='sidebar-start')
                    a(href="#start" role="tab")
                        i.fa.fa-sliders
                li(id='sidebar-routes')
                    a(href="#routes" role="tab")
                        i.fa.fa-star
        div.sidebar-content
            #overview.div.sidebar-pane
                h1.sidebar-header
                    | Overview
                br
                p= userData
                div.row
                    a.btn.btn-outline-primary.btn-block(href='/users/' + user._id + '/update', title="update", id="update")
                        | Update Profile
                    button.btn.btn-outline-primary.btn-block(id="generate", title="generate")
                        | Generate New Route
            #start.sidebar-pane
                h1.sidebar-header
                    | Starting Point
                br
                p Select the location on the map where you want to start.
                form(id="coordinate-form")
                    h5 Selected Location
                    div.row
                        p Latitude:
                        input.form-control(id="input-lat", type='text', placeholder="23,5246", style="margin-top: -10px", required)
                        br
                    div.row
                        p Latitude:
                        input.form-control(id="input-lng", type='text', placeholder="130,5246", style="margin-top: -10px", required)
                        br
                    div.row
                        b(id="gps-calculated")
                        br
                    br
                    button.btn.btn-outline-primary.btn-block(type='submit') Next Step

            #settings.sidebar-pane
                h1.sidebar-header
                    | Settings
                br
                button.btn.btn-outline-primary.btn-block(id= "back-button") Go Back
                br
                p Select some criteria for generating your new routes.
                form(action="/generate/", id="settings-form")
                    h5 Tour Distance:
                    div.row
                        div.col-xs-2
                            input(id="distance-input", onchange="this.value = parseFloat(this.value).toFixed(1);", type='number', name='distance', value="20.0", style="margin-top:-10px; margin-bottom: 10px;", max="99", min="1", size="2", step="0.5")
                            span(style="margin-left:10px") km
                        div.col-xs-5
                    br
                    h5 What is Your Goal?
                    fieldset#group1
                        .btn-group.btn-group-vertical.btn-group-toggle(data-toggle='buttons')
                            label.btn.btn-outline-secondary.active(id="toggle-button-cycling") Discover New Routes
                                input(type='radio', value='discover', name='preference', checked='')

                            label.btn.btn-outline-secondary(id="toggle-button-running") Cycle The
                                | Above Distance
                                input(type='radio', value='distance', name='preference')

                            label.btn.btn-outline-secondary(id="toggle-button-both") Surprise Me
                                input(type='radio', value='both', name='preference')
                    br
                    button.btn.btn-outline-primary.btn-block(type='submit') Next Step

            #loading.div.sidebar-pane
                h1.sidebar-header
                    | Search
                br
                br
                br
                p(style="text-align: center;", id="loadingText") Generating your new routes ...
                div.row
                    .wrap
                        .loading
                            .bounceball


            #routes.div.sidebar-pane
                h1.sidebar-header
                    | Routen
                br
                if (hasGeneratedRoutes)
                    if (foundRoutes)
                        - var c = 0
                        - each route in routeMaps
                            if (c < numRoutes)
                                - c = c+1
                                div.card.shadow(style="width:90%; margin-bottom:20px; ")
                                    div.card-body(style="margin-top:-5px;")
                                        p(style="margin-top:-10px")= 'Distance ' + (route.distance.toString().split('.', 1)) / 1000 + ' km'
                                        p(style="margin-top:-10px")= Math.ceil((1 - route.familiarityScore) * 100) + '% undiscovered area'
                                        p
                                            | Contains: &nbsp
                                            - if (route.parts.length === 0)
                                                p none
                                            - each part in route.parts
                                                - if (part.isRoute)
                                                    a.badge.badge-pill.badge-success(href="/routes/"+part._id)= part.title
                                                    | &nbsp
                                            - each part in route.parts
                                                - if (!part.isRoute)
                                                    a.badge.badge-pill.badge-primary(href="/routes/" + part._id)= part.title
                                                    | &nbsp
                                        br
                                        br
                                        div.inline-buttons(style="margin-bottom:-20px; margin-top:-30px;")
                                            p
                                                button.btn.btn-outline-secondary.one-half.first(id="showButton"+c)= "Show on Map"
                                                | &nbsp;
                                                button.btn.btn-outline-danger.one-half(id="keepButton"+c)= "Discard"
                    else
                        p No routes that match your criteria found.
                button.btn.btn-outline-success.btn-block(id = 'saveButton', type='submit', title="save", style="width:90%;")
                     | Save Routes

    div(id="mapcontainer", style="width:100%;")
        div.sidebar-map(id='map', style="width:100%;")
            include ../includes/map.jade
